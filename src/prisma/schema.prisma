// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id              String            @id @default(uuid())
  name            String
  slug            String            @unique
  description     String            @db.VarChar(1024)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ProductCategory ProductCategory[]
  CategoryImage   CategoryImage[]
}

model Product {
  id              String            @id @default(uuid())
  name            String
  slug            String            @unique
  description     String            @db.VarChar(1024)
  price           Float
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ProductCategory ProductCategory[]
  ProductSize     ProductSize[]
  ProductColor    ProductColor[]
  Images          ProductImage[]
  CartItem        CartItem[]
  OrderDetail     OrderDetail[]
}

model ProductCategory {
  id         String   @id @default(uuid())
  productId  String
  categoryId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Product    Product  @relation(fields: [productId], references: [id])
  Category   Category @relation(fields: [categoryId], references: [id])
}

model Size {
  id          String        @id @default(uuid())
  size        Int           @unique
  ProductSize ProductSize[]
}

model ProductSize {
  id        String   @id @default(uuid())
  productId String
  sizeId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product  @relation(fields: [productId], references: [id])
  Size      Size     @relation(fields: [sizeId], references: [id])
}

model Color {
  id           String         @id @default(uuid())
  name         String
  hex          String         @unique
  ProductColor ProductColor[]
}

model ProductColor {
  id        String   @id @default(uuid())
  productId String
  colorId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product  @relation(fields: [productId], references: [id])
  Color     Color    @relation(fields: [colorId], references: [id])
}

model ProductImage {
  id        String   @id @default(uuid())
  url       String
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Product   Product  @relation(fields: [productId], references: [id])
}

model CategoryImage {
  id         String   @id @default(uuid())
  url        String
  categoryId String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  Category   Category @relation(fields: [categoryId], references: [id])
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  firstName String
  lastName  String
  role      ROLE     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Order     Order[]
}

model Cart {
  id        String     @id @default(uuid())
  total     Float
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  CartItem  CartItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  Cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    String
  Product   Product  @relation(fields: [productId], references: [id])
  productId String
  size      Int
  color     String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id          String        @id @default(uuid())
  total       Float
  status      ORDERSTATUS   @default(PENDING)
  User        User          @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  OrderDetail OrderDetail[]
}

model OrderDetail {
  id        String   @id @default(uuid())
  Order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  Product   Product  @relation(fields: [productId], references: [id])
  productId String
  size      Int
  color     String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ROLE {
  ADMIN
  USER
}

enum ORDERSTATUS {
  PENDING
  SHIPPED
  DELIVERED
}
